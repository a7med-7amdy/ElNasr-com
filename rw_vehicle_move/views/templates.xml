<odoo>
 <data noupdate="1">


        <record id="vehicle_moves_seq" model="ir.sequence">
            <field name="name">Vehicle Moves  sequence</field>
            <field name="code">vehicle.moves.seq</field>
            <field name="prefix">VM</field>
            <field eval="True" name="use_date_range"/>
            <field eval="False" name="company_id"/>
            <field name="padding">4</field>
        </record>
    </data>


    <data>


        <record id="vehicle_move_action_confirm" model="ir.actions.server">
        <field name="name">Confirm (s)</field>
        <field name="model_id" ref="rw_vehicle_move.model_vehicle_move"/>
        <field name="binding_model_id" ref="rw_vehicle_move.model_vehicle_move"/>
        <field name="binding_view_types">list</field>
        <field name="state">code</field>
        <field name="code">
            if records:
                records.filtered(lambda x: x.state in ('draft')).confirm()
        </field>
    </record>


   <record id="vehicle_move_action_create_invoice" model="ir.actions.server">
        <field name="name">Create Invoice (s)</field>
        <field name="model_id" ref="rw_vehicle_move.model_vehicle_move"/>
        <field name="binding_model_id" ref="rw_vehicle_move.model_vehicle_move"/>
        <field name="binding_view_types">list</field>
        <field name="state">code</field>
       <field name="groups_id" eval="[(4, ref('rw_vehicle_move.group_create_vehicle_invoice'))]"/>
        <field name="code">
            if records:
                records.filtered(lambda x: x.state in ('confirmed')).create_invoice()
        </field>
    </record>

    </data>
</odoo>
